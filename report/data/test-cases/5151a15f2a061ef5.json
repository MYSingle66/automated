{"uid":"5151a15f2a061ef5","name":"test_case_001登录成功","fullName":"testcase.test_api.TestApi#test_login_success","historyId":"95afb917778506661330bbd26489329c","time":{"start":1667995789832,"stop":1667995789988,"duration":156},"status":"failed","statusMessage":"AssertionError: [status]的期望值:[200] != 实际值:[100]:","statusTrace":"self = <test_api.TestApi object at 0x000002C8174BB4A8>\ncaseinfo = {'dcaseid': 'test_case_001登录成功', 'ddate': {'keywords': 17026958246, 'password': 'aa123456'}, 'dexcepted_res': {'description': '登录成功', 'status': 200}, 'dheaders': {'Content-Type': 'application/x-www-form-urlencoded'}, ...}\n\n    @allure.severity('critical') # 用例等级\n    @allure.story(\"登录用例\")\n    # @allure.title('登录接口测试用例')  # 测试用例标题\n    @pytest.mark.parametrize(\"caseinfo\",read_data_all(os.path.join(data_path,'apitest.xlsx'),'Sheet1'))\n    def test_login_success(self,caseinfo):\n        # print(caseinfo)\n        data=read_all_data(caseinfo)\n        res = RequestUtil().send_all_request(method=data[1],url=data[2],data=data[4],headers=data[3])\n        # ReadData().assert_utils(data[6],data[7],res.json().get('status'),res.json().get('description'))\n        allure.dynamic.title(data[0])\n    \n    \n        log.info(\"预期结果：{}\".format(data[5]))\n        log.info(\"实际结果：{}\".format(res.json()))\n        # dy = iterdict(data[5],res.json())\n>       dy = iterdicts(data[5], res.json())\n\ntestcase\\test_api.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpected_result = {'description': '登录成功', 'status': 200}\nactual_result = {'description': '用户不存在', 'status': 100}\n\n    def iterdicts(expected_result, actual_result):\n        ret, msg = iterdict_(expected_result, actual_result)\n>       assert ret, msg\nE       AssertionError: [status]的期望值:[200] != 实际值:[100]:\n\nuntil\\assert_utils.py:84: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: [status]的期望值:[200] != 实际值:[100]:","statusTrace":"self = <test_api.TestApi object at 0x000002C8174BB4A8>\ncaseinfo = {'dcaseid': 'test_case_001登录成功', 'ddate': {'keywords': 17026958246, 'password': 'aa123456'}, 'dexcepted_res': {'description': '登录成功', 'status': 200}, 'dheaders': {'Content-Type': 'application/x-www-form-urlencoded'}, ...}\n\n    @allure.severity('critical') # 用例等级\n    @allure.story(\"登录用例\")\n    # @allure.title('登录接口测试用例')  # 测试用例标题\n    @pytest.mark.parametrize(\"caseinfo\",read_data_all(os.path.join(data_path,'apitest.xlsx'),'Sheet1'))\n    def test_login_success(self,caseinfo):\n        # print(caseinfo)\n        data=read_all_data(caseinfo)\n        res = RequestUtil().send_all_request(method=data[1],url=data[2],data=data[4],headers=data[3])\n        # ReadData().assert_utils(data[6],data[7],res.json().get('status'),res.json().get('description'))\n        allure.dynamic.title(data[0])\n    \n    \n        log.info(\"预期结果：{}\".format(data[5]))\n        log.info(\"实际结果：{}\".format(res.json()))\n        # dy = iterdict(data[5],res.json())\n>       dy = iterdicts(data[5], res.json())\n\ntestcase\\test_api.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpected_result = {'description': '登录成功', 'status': 200}\nactual_result = {'description': '用户不存在', 'status': 100}\n\n    def iterdicts(expected_result, actual_result):\n        ret, msg = iterdict_(expected_result, actual_result)\n>       assert ret, msg\nE       AssertionError: [status]的期望值:[200] != 实际值:[100]:\n\nuntil\\assert_utils.py:84: AssertionError","steps":[{"name":"请求参数","time":{"start":1667995789833,"stop":1667995789984,"duration":151},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"method","value":"'post'"},{"name":"url","value":"'http://user-p2p-test.itheima.net/member/public/login'"},{"name":"data","value":"{'keywords': 17026958246, 'password': 'aa123456'}"},{"name":"headers","value":"{'Content-Type': 'application/x-www-form-urlencoded'}"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true},{"name":"预期结果-返回结果","time":{"start":1667995789986,"stop":1667995789988,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"expected_result","value":"{'status': 200, 'description': '登录成功'}"},{"name":"actual_result","value":"{'status': 100, 'description': '用户不存在'}"}],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"stepsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"登录模块测试"},{"name":"epic","value":"金融系统测试"},{"name":"story","value":"登录用例"},{"name":"severity","value":"critical"},{"name":"parentSuite","value":"testcase"},{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestApi"},{"name":"host","value":"DESKTOP-B7JFFBJ"},{"name":"thread","value":"18388-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcase.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'dcaseid': 'test_case_001登录成功', 'dmethod': 'post', 'dheaders': {'Content-Type': 'application/x-www-form-urlencoded'}, 'durl': 'http://user-p2p-test.itheima.net/member/public/login', 'ddate': {'keywords': 17026958246, 'password': 'aa123456'}, 'dexcepted_res': {'status': 200, 'description': '登录成功'}}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5151a15f2a061ef5.json","parameterValues":["{'dcaseid': 'test_case_001登录成功', 'dmethod': 'post', 'dheaders': {'Content-Type': 'application/x-www-form-urlencoded'}, 'durl': 'http://user-p2p-test.itheima.net/member/public/login', 'ddate': {'keywords': 17026958246, 'password': 'aa123456'}, 'dexcepted_res': {'status': 200, 'description': '登录成功'}}"]}